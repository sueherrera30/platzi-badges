{"ast":null,"code":"import _slicedToArray from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sue/Desktop/platzi/platzi-badges/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sue/Desktop/platzi/platzi-badges/src/components/BadgesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport Gravatar from '../components/Gravatar';\nimport './styles/BadgesList.css';\n\nvar BadgesListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgesListItem, _React$Component);\n\n  function BadgesListItem() {\n    _classCallCheck(this, BadgesListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BadgesListItem).apply(this, arguments));\n  }\n\n  _createClass(BadgesListItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"BadgesListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Gravatar, {\n        className: \"BadgesListItem__avatar\",\n        email: this.props.badge.email,\n        alt: \"\".concat(this.props.badge.firstName, \" \").concat(this.props.badge.lastName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.badge.firstName, \" \", this.props.badge.lastName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), \"@\", this.props.badge.twitter, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), this.props.badge.jobTitle));\n    }\n  }]);\n\n  return BadgesListItem;\n}(React.Component);\n\nfunction BadgesList(props) {\n  var badges = props.badges;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1]; // para poder filtrar:\n\n\n  var filteredBadgers = badges.filter(function (badge) {\n    return badge.firstName.includes(query);\n  }); // si filtramos y no encuentra valor, llegamos al valor 0, entramos \n  // a este caso, dosopciones:\n  // hacer una copia del input  y pegarlo arriba\n\n  if (filteredBadgers.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"please,filter badger platzi lover \"), React.createElement(\"input\", {\n      className: \"form-control\" // lo que sea que este en el estado del query, \n      //se va a desplegar en el value\n      ,\n      value: query,\n      onChange: function onChange(e) {\n        setQuery(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"No badges were found\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/badges/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Create new badge\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"BadgesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, filteredBadgers.map(function (badge) {\n    return React.createElement(\"li\", {\n      key: badge.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/badges/\".concat(badge.id, \"/edit\"),\n      className: \"text-reset text-decoration-none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(BadgesListItem, {\n      badge: badge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })));\n  })));\n}\n\nexport default BadgesList;","map":{"version":3,"sources":["/Users/sue/Desktop/platzi/platzi-badges/src/components/BadgesList.js"],"names":["React","Link","Gravatar","BadgesListItem","props","badge","email","firstName","lastName","twitter","jobTitle","Component","BadgesList","badges","useState","query","setQuery","filteredBadgers","filter","includes","length","e","target","value","map","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Gravatar from '../components/Gravatar';\nimport './styles/BadgesList.css';\n\nclass BadgesListItem extends React.Component {\n  render() {\n    return (\n      <div className=\"BadgesListItem\">\n        <Gravatar\n          className=\"BadgesListItem__avatar\"\n          email={this.props.badge.email}\n          alt={`${this.props.badge.firstName} ${this.props.badge.lastName}`}\n         />\n        <div>\n          <strong>\n            {this.props.badge.firstName} {this.props.badge.lastName}\n          </strong>\n          <br />@{this.props.badge.twitter}\n          <br />\n          {this.props.badge.jobTitle}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction BadgesList(props) {\n  const badges = props.badges;\n  const [ query, setQuery ] = React.useState('');\n  // para poder filtrar:\n  const filteredBadgers = badges.filter(badge => {\n    return badge.firstName.includes(query)\n  })\n  // si filtramos y no encuentra valor, llegamos al valor 0, entramos \n  // a este caso, dosopciones:\n  // hacer una copia del input  y pegarlo arriba\n    if (filteredBadgers.length === 0) {\n      return (\n        <div>\n          <div className=\"form-group\">\n            <label>please,filter badger platzi lover </label>\n            <input\n            className=\"form-control\"\n            // lo que sea que este en el estado del query, \n            //se va a desplegar en el value\n            value={query}\n            onChange={e => {\n            setQuery(e.target.value)\n            }}\n            />\n          </div>\n          <h3>No badges were found</h3>\n          <Link className=\"btn btn-primary\" to=\"/badges/new\">\n            Create new badge\n          </Link>\n        </div>\n      );\n    }\n    return (\n      <div className=\"BadgesList\">\n        <ul className=\"list-unstyled\">\n          {filteredBadgers.map(badge => {\n            return (\n              <li key={badge.id}>\n                <Link \n                  to={`/badges/${badge.id}/edit`}\n                  className=\"text-reset text-decoration-none\"\n                  >\n                  <BadgesListItem badge={badge} />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n}\n\nexport default BadgesList;\n"]},"metadata":{},"sourceType":"module"}